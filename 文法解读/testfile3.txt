// B级测试程序：常量数组、动态数组、多参数函数

const int const_arr[3] = {10, 20, 30};

int get_max(int a, int b) {
    if (a > b) {
        return a;
    } else {
        return b;
    }
}

int sumArray(int arr[], int size) {
    int total = 0;
    int i = 0;
    for (i = 0; i < size; i = i + 1) {
        total = total + arr[i];
    }
    return total;
}

int main() {
    int dynamic_arr[3] = {5, 15, 25};
    int i = 0;
    
    printf("23373541\n");
    
    // 测试常量数组访问
    printf("Const array[0]: %d\n", const_arr[0]);
    printf("Const array[1]: %d\n", const_arr[1]);
    printf("Const array[2]: %d\n", const_arr[2]);
    
    // 测试动态数组操作
    for (i = 0; i < 3; i = i + 1) {
        dynamic_arr[i] = dynamic_arr[i] + const_arr[i];
        printf("Sum array[%d]: %d\n", i, dynamic_arr[i]);
    }
    
    // 测试函数返回
    int max_val = get_max(dynamic_arr[0], dynamic_arr[2]);
    printf("Max value: %d\n", max_val);
    
    // 测试数组传参
    int total_val = sumArray(dynamic_arr, 3);
    printf("Sum of dynamic_arr: %d\n", total_val);
    
    // 部分数组传参
    int partial_val = sumArray(dynamic_arr+1, 2);
    printf("Partial sum of dynamic_arr[1..2]: %d\n", partial_val);
    
    // 测试表达式求值
    int complex = (dynamic_arr[0] * dynamic_arr[1]) / (dynamic_arr[2] - 20);
    printf("Complex calculation: %d\n", complex);
    
    // 测试 for 循环 + break/continue
    for (i = 0; i < 6; i = i + 1) {
        if (i == 2) {
            continue;
        }
        if (i == 5) {
            break;
        }
        printf("loop i=%d\n", i);
    }
    
    return 0;
}
